<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <description>Example configuration to get you started.</description>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="${entitymanager.packages.to.scan}" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="${db.generateDdl}" />
                <property name="databasePlatform" value="${db.dialect}" />
                <property name="showSql" value="${db.showSql}" />

            </bean>
        </property>
        <property name="persistenceProvider" ref="persistanceProvider" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.format_sql">${db.format_sql}</prop>
                <prop key="org.hibernate.envers.audit_table_suffix">${audit_suffix}</prop>
                <prop key="org.hibernate.envers.store_data_at_delete">true</prop>
            </props>
        </property>
        <property name="persistenceUnitManager">
            <bean
                    class="org.springframework.data.jpa.support.MergingPersistenceUnitManager">
                <property name="persistenceXmlLocations">
                    <list>
                        <value>classpath*:META-INF/*persistence*.xml</value>
                    </list>
                </property>
                <property name="defaultDataSource" ref="dataSource" />
            </bean>
        </property>
        <property name="persistenceUnitName" value="spring-jpa" />
    </bean>

    <bean id="persistanceProvider"
          class="com.ca.framework.core.db.persistance.HibernatePersistenceProviderMT" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>

    <bean id="dataSource"
          class="com.ca.framework.core.db.persistance.TenantRoutingDataSource">
        <property name="defaultTargetDataSource" ref="umgAdminDataSource"></property>

    </bean>

    <bean id="umgAdminDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${db.driver}" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <!-- these are C3P0 properties -->
        <property name="checkoutTimeout" value="${db.connectionTimeout}" />
        <property name="preferredTestQuery" value="SELECT 1" />
        <property name="maxConnectionAge" value="${db.maxConnectionAge}" />
        <property name="autoCommitOnClose" value="${db.defaultAutoCommit}" />
        <property name="maxIdleTime" value="${db.maxIdleTime}" />
        <property name="minPoolSize" value="${db.minPoolSize}" />
        <property name="maxPoolSize" value="${db.maxPoolSize}" />
    </bean>

    <!-- <bean id="umgAdminDataSource" class="com.jolbox.bonecp.BoneCPDataSource">
        <property name="driverClass" value="${db.driver}" /> <property name="jdbcUrl"
        value="${db.url}" /> <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" /> <property name="poolName"
        value="umg-admin" /> <property name="connectionTimeout" value="${db.connectionTimeout}"
        /> <property name="connectionTestStatement" value="SELECT 1" /> <property
        name="maxConnectionAge" value="${db.maxConnectionAge}" /> <property name="defaultAutoCommit"
        value="${db.defaultAutoCommit}" /> </bean> -->

    <tx:annotation-driven transaction-manager="transactionManager"
                          order="100" />

    <jpa:repositories base-package="com.ca.umg.business.*.dao" />
    <jpa:repositories base-package="com.ca.umg.report.*.dao" />
    <jpa:repositories base-package="com.ca.umg.business.version.*.dao" />
    <jpa:repositories base-package="com.ca.umg.business.modelet.*.dao"/>
    <jpa:repositories base-package="com.ca.umg.business.modelet.*.*.dao"/>


    <jpa:auditing auditor-aware-ref="auditorAwareBean" />

    <bean id="auditorAwareBean" class="com.ca.framework.core.db.domain.AuditorAwareImpl" />

    <!-- <mongo:db-factory id="mongoDbFactory" host="${mongo.host}" port="${mongo.port}"
        dbname="${mongo.dbname}" username="${mongo.username}" password="${mongo.password}"/> -->

    <mongo:db-factory id="mongoDbFactoryReplica" dbname="${mongo.dbname}"
                      mongo-ref="mongoSet" username="${mongo.username}" password="${mongo.password}"
                      authentication-dbname="${mongo.dbname}" />

    <!-- <mongo:mongo id="mongoSet" replica-set="${mongo_replica_set}"> <mongo:options
        connections-per-host="${mongo.connectionsPerHost}" connect-timeout="${mongo.connectTimeout}"
        max-wait-time="${mongo.maxWaitTime}" /> </mongo:mongo> -->

    <mongo:mongo-client id="mongoSet" replica-set="${mongo_replica_set}"
                        credentials="${mongo.username}:${mongo.password}@${mongo.dbname}">

        <mongo:client-options connections-per-host="${mongo.connectionsPerHost}"
                              connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}" />

    </mongo:mongo-client>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactoryReplica" />
    </bean>

    <bean id="mongoDAO"
          class="com.ca.umg.business.transaction.migrate.dao.MigrateTransactionMongoDAO">
        <constructor-arg name="mongoOps" ref="mongoTemplate" />
    </bean>

    <bean id="mongoTransactionDAO"
          class="com.ca.umg.business.transaction.mongo.dao.MongoTransactionDAOImpl">
        <constructor-arg name="mongoDb"
                         value="#{mongoSet.getDatabase('${mongo.dbname}')}" />
        <constructor-arg name="mongoTemplate" ref="mongoTemplate" />
    </bean>

</beans>