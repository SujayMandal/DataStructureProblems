use `Ocwen`;

DROP TABLE IF EXISTS UMG_VERSION_AUDIT;
DROP TABLE IF EXISTS UMG_VERSION;

DROP TABLE IF EXISTS MAPPING_INPUT_AUDIT;
DROP TABLE IF EXISTS MAPPING_INPUT;

DROP TABLE IF EXISTS MAPPING_OUTPUT_AUDIT;
DROP TABLE IF EXISTS MAPPING_OUTPUT;

DROP TABLE IF EXISTS MAPPING_AUDIT;
DROP TABLE IF EXISTS MAPPING;

DROP TABLE IF EXISTS MODEL_DEFINITION_AUDIT;
DROP TABLE IF EXISTS MODEL_DEFINITION;

DROP TABLE IF EXISTS MODEL_AUDIT;
DROP TABLE IF EXISTS MODEL;

DROP TABLE IF EXISTS MODEL_LIBRARY_AUDIT;
DROP TABLE IF EXISTS MODEL_LIBRARY;
DROP TABLE IF EXISTS UMG_RUNTIME_TRANSACTION_AUDIT;
DROP TABLE IF EXISTS UMG_RUNTIME_TRANSACTION;

DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_INPUTS_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_AUDIT ;

DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_RESULT_TYPES ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_OUTPUTS ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_INPUTS ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY ;

DROP TABLE IF EXISTS REVINFO;

CREATE TABLE `REVINFO` (
  `REV` int(11) NOT NULL AUTO_INCREMENT,
  `REVTSTMP` bigint(20) DEFAULT NULL,
  `REVBY` VARCHAR(100),
  PRIMARY KEY (`REV`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE MODEL_LIBRARY (
        ID CHARACTER(36) NOT NULL,
        TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
        NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model library, given by user as TAG.',
        DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of the model library.',
        UMG_NAME VARCHAR(100) NOT NULL COMMENT 'UMG provided name of the model library. TAG-MM-DD-YYYY-HH-MM',
        EXECUTION_LANGUAGE VARCHAR(25) NOT NULL COMMENT 'The execution language for the version',
        EXECUTION_TYPE VARCHAR(20) NOT NULL COMMENT 'The execution mechanism for the version',
        JAR_NAME VARCHAR(100) NOT NULL COMMENT 'The name of the JAR uploaded against the library',
        CREATED_BY CHAR(36) NOT NULL,
        CREATED_ON BIGINT NOT NULL,
        LAST_UPDATED_BY CHAR(36) NULL,
        LAST_UPDATED_ON BIGINT NULL,
        PRIMARY KEY (ID),
        UNIQUE INDEX `UN_MODEL_LIBRARY_UMG_NAME` (`UMG_NAME`)
)
COMMENT='The table which contains the individual model library definitions'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;
CREATE TABLE MODEL_LIBRARY_AUDIT (
        ID CHARACTER(36) NOT NULL,
        TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
        NAME VARCHAR(50) COMMENT 'Name of the model library, given by user as TAG.',
        DESCRIPTION VARCHAR(200) COMMENT 'Description of the model library.',
        UMG_NAME VARCHAR(100) COMMENT 'UMG provided name of the model library. TAG-MM-DD-YYYY-HH-MM',
        EXECUTION_LANGUAGE VARCHAR(25) COMMENT 'The execution language for the version',
        EXECUTION_TYPE VARCHAR(20) COMMENT 'The execution mechanism for the version',
        JAR_NAME VARCHAR(100) COMMENT 'The name of the JAR uploaded against the library',
        CREATED_BY CHAR(100) NOT NULL ,
        CREATED_ON BIGINT(20) NOT NULL,
        LAST_UPDATED_BY CHAR(100) NULL,
        LAST_UPDATED_ON BIGINT(20) NULL,
        REV INT(11) NOT NULL,
        REVTYPE TINYINT(4) DEFAULT NULL,
        PRIMARY KEY (ID,REV),
        KEY IDX_MODEL_LIBRARY_AUDIT_REVINFO (REV),
        CONSTRAINT FK_MODEL_LIBRARY_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
COMMENT='The table which contains the individual model library definitions audit table'
DEFAULT CHARSET=utf8
COLLATE=utf8_bin
ENGINE=InnoDB;

CREATE TABLE MODEL (
        ID CHAR(36) NOT NULL,
        TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
        NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model, given by user as TAG.',
        UMG_NAME VARCHAR(100) NOT NULL COMMENT 'UMG provided name of the model. TAG-MM-DD-YYYY-HH-MM',
        DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of the model.',
        IO_DEFINITION_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the XML file uploaded. Useed to show on UI.',
        DOC_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the DOCUMENTATION file uploaded. Useed to show on UI.',
        CREATED_BY CHAR(36) NOT NULL,
        CREATED_ON BIGINT(20) NOT NULL,
        LAST_UPDATED_BY CHAR(36) NULL DEFAULT NULL,
        LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
        PRIMARY KEY (ID),
        UNIQUE INDEX `UN_MODEL_UMG_NAME` (`UMG_NAME`)
)
COMMENT='The table which contains the individual model details'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MODEL_AUDIT (
        ID CHAR(36) NOT NULL,
        TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
        NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model, given by user as TAG.',
        UMG_NAME VARCHAR(100) NOT NULL COMMENT 'UMG provided name of the model. TAG-MM-DD-YYYY-HH-MM',
        DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of the model.',
        IO_DEFINITION_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the XML file uploaded. Useed to show on UI.',
        DOC_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the DOCUMENTATION file uploaded. Useed to show on UI.',
        CREATED_BY CHAR(100) NOT NULL ,
    CREATED_ON BIGINT(20) NOT NULL,
    LAST_UPDATED_BY CHAR(100) NULL,
    LAST_UPDATED_ON BIGINT(20) NULL,
        REV INT(11) NOT NULL,
        REVTYPE TINYINT(4) DEFAULT NULL,
        PRIMARY KEY (ID,REV)

)
COMMENT='The table which contains the individual model audit details'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MODEL_DEFINITION (
        ID CHAR(36) NOT NULL,
        TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
        IO_TYPE VARCHAR(50) NOT NULL COMMENT 'Type of model definition text/xml or application/json',
        IO_DEFINITION BLOB NOT NULL COMMENT 'The actual input output defintion for the model.',
        MODEL_ID CHAR(36) NOT NULL COMMENT 'The model to which this definition belongs.',
        CREATED_BY CHAR(36) NOT NULL,
        CREATED_ON BIGINT(20) NOT NULL,
        LAST_UPDATED_BY CHAR(36) NULL DEFAULT NULL,
        LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
        PRIMARY KEY (ID),
        INDEX IDX_MODEL_ID (MODEL_ID),
        CONSTRAINT FK_MODEL FOREIGN KEY (MODEL_ID) REFERENCES MODEL (ID) ON UPDATE NO ACTION ON DELETE NO ACTION
)
COMMENT='The table which contains the individual model definitions'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MODEL_DEFINITION_AUDIT (
        ID CHAR(36) NOT NULL,
        TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
        IO_TYPE VARCHAR(50) COMMENT 'Type of model definition text/xml or application/json',
        IO_DEFINITION BLOB COMMENT 'The actual input output defintion for the model.',
        MODEL_ID CHAR(36) COMMENT 'The model to which this definition belongs.',
        REV INT(11) NOT NULL,
        REVTYPE TINYINT(4) DEFAULT NULL,
          CREATED_BY CHAR(100) NOT NULL ,
          CREATED_ON BIGINT(20) NOT NULL,
          LAST_UPDATED_BY CHAR(100) NULL,
          LAST_UPDATED_ON BIGINT(20) NULL,
        PRIMARY KEY (ID,REV),
        KEY IDX_MODEL_DEFINITION_AUDIT_REVINFO (REV),
        CONSTRAINT FK_MODEL_DEFINITION_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
COMMENT='The table which contains the individual model definitions audit'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MAPPING (
        `ID` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `NAME` VARCHAR(100) NOT NULL COMMENT 'Derived name of the mapping.Includes version date' COLLATE 'utf8_bin',
        `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL COMMENT 'Description of the mapping.' COLLATE 'utf8_bin',
        `MODEL_ID` CHAR(36) NOT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
        `MODEL_IO_DATA` MEDIUMBLOB NULL,
        `CREATED_BY` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `CREATED_ON` BIGINT(20) NOT NULL,
        `LAST_UPDATED_BY` CHAR(36) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `LAST_UPDATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `TENANT_ID` CHAR(36) NOT NULL DEFAULT 'davxotdrnq02' COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
        `STATUS` VARCHAR(20) NOT NULL COLLATE 'utf8_bin',
        PRIMARY KEY (`ID`),
        UNIQUE INDEX `UN_MAPPING_NAME` (`NAME`),
        INDEX `FK_MAPPING_MODEL` (`MODEL_ID`),
        CONSTRAINT `FK_MAPPING_MODEL` FOREIGN KEY (`MODEL_ID`) REFERENCES `MODEL` (`ID`) ON UPDATE NO ACTION ON DELETE NO ACTION
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MAPPING_AUDIT (
        `ID` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `REV` INT(11) NOT NULL,
        `REVTYPE` TINYINT(4) NULL DEFAULT NULL,
        `NAME` VARCHAR(100) NULL DEFAULT NULL COMMENT 'Derived name of the mapping.Includes version date' COLLATE 'utf8_bin',
        `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL COMMENT 'Description of the mapping.' COLLATE 'utf8_bin',
        `MODEL_ID` CHAR(36) NULL DEFAULT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
        `MODEL_IO_DATA` MEDIUMBLOB NULL,
        `TENANT_ID` CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
        `STATUS` VARCHAR(20) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `CREATED_BY` VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `CREATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `LAST_UPDATED_BY` VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `LAST_UPDATED_ON` BIGINT(20) NULL DEFAULT NULL,
        PRIMARY KEY (`ID`, `REV`),
        INDEX `IDX_MAPPING_AUDIT_REVINFO` (`REV`),
        CONSTRAINT `FK_MAPPING_AUDIT_REVINFO` FOREIGN KEY (`REV`) REFERENCES `REVINFO` (`REV`)
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MAPPING_INPUT (
        `ID` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `MAPPING_ID` CHAR(36) NOT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
        `MAPPING_DATA` MEDIUMBLOB NULL,
        `TENANT_INTERFACE_DEFINITION` MEDIUMBLOB NULL,
        `CREATED_BY` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `CREATED_ON` BIGINT(20) NOT NULL,
        `LAST_UPDATED_BY` CHAR(36) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `LAST_UPDATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `TENANT_ID` CHAR(36) NOT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
        `TENANT_INTF_SYS_DEFINITION` MEDIUMBLOB NULL,
        PRIMARY KEY (`ID`),
        UNIQUE INDEX `UN_MAPPING_INPUT` (`MAPPING_ID`),
        CONSTRAINT `FK_MAPPING_INPUT_MAPPING` FOREIGN KEY (`MAPPING_ID`) REFERENCES `MAPPING` (`ID`) ON UPDATE NO ACTION ON DELETE NO ACTION
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MAPPING_INPUT_AUDIT (
        `ID` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `REV` INT(11) NOT NULL,
        `REVTYPE` TINYINT(4) NULL DEFAULT NULL,
        `MAPPING_ID` CHAR(36) NULL DEFAULT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
        `MAPPING_DATA` MEDIUMBLOB NULL,
        `TENANT_INTERFACE_DEFINITION` MEDIUMBLOB NULL,
        `TENANT_ID` CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
        `TENANT_INTF_SYS_DEFINITION` MEDIUMBLOB NULL,
        `CREATED_BY` VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `CREATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `LAST_UPDATED_BY` VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `LAST_UPDATED_ON` BIGINT(20) NULL DEFAULT NULL,
        PRIMARY KEY (`ID`, `REV`),
        INDEX `IDX_MAPPING_INPUT_AUDIT_REVINFO` (`REV`),
        CONSTRAINT `FK_MAPPING_INPUT_AUDIT_REVINFO` FOREIGN KEY (`REV`) REFERENCES `REVINFO` (`REV`)
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MAPPING_OUTPUT (
        `ID` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `MAPPING_ID` CHAR(36) NOT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
        `MAPPING_DATA` MEDIUMBLOB NULL,
        `TENANT_INTERFACE_DEFINITION` MEDIUMBLOB NULL,
        `CREATED_BY` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `CREATED_ON` BIGINT(20) NOT NULL,
        `LAST_UPDATED_BY` CHAR(36) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `LAST_UPDATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `TENANT_ID` CHAR(36) NOT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
        PRIMARY KEY (`ID`),
        UNIQUE INDEX `UN_MAPPING_OUTPUT` (`MAPPING_ID`),
        CONSTRAINT `FK_MAPPING_OUTPUT_MAPPING` FOREIGN KEY (`MAPPING_ID`) REFERENCES `MAPPING` (`ID`) ON UPDATE NO ACTION ON DELETE NO ACTION
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE MAPPING_OUTPUT_AUDIT (
        `ID` CHAR(36) NOT NULL COLLATE 'utf8_bin',
        `REV` INT(11) NOT NULL,
        `REVTYPE` TINYINT(4) NULL DEFAULT NULL,
        `MAPPING_ID` CHAR(36) NULL DEFAULT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
        `MAPPING_DATA` MEDIUMBLOB NULL,
        `TENANT_INTERFACE_DEFINITION` MEDIUMBLOB NULL,
        `TENANT_ID` CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
        `CREATED_BY` VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `CREATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `LAST_UPDATED_BY` VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
        `LAST_UPDATED_ON` BIGINT(20) NULL DEFAULT NULL,
        `TEMP_MODEL_IO` MEDIUMBLOB NULL,
        PRIMARY KEY (`ID`, `REV`),
        INDEX `IDX_MAPPING_OUTPUT_AUDIT_REVINFO` (`REV`),
        CONSTRAINT `FK_MAPPING_OUTPUT_AUDIT_REVINFO` FOREIGN KEY (`REV`) REFERENCES `REVINFO` (`REV`)
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Table `SYNDICATE_DATA_QUERY_RESULT_TYPES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_RESULT_TYPES` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_RESULT_TYPES` (
  `ID` CHAR(36) NOT NULL ,
  `TENANT_ID` CHAR(36) NULL ,
  `TYPE_NAME` VARCHAR(50) NOT NULL ,
  `CREATED_BY` CHAR(36) NOT NULL,
  `CREATED_ON` BIGINT NOT NULL,
  `LAST_UPDATED_BY` CHAR(36) NULL,
  `LAST_UPDATED_ON` BIGINT NULL,
  PRIMARY KEY (`ID`),
  INDEX `TYPE_NAME_IDX` (TYPE_NAME))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table `SYNDICATE_DATA_QUERY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY` (
  `ID` CHAR(36) NOT NULL ,
  `TENANT_ID` CHAR(36) NULL ,
  `MAPPING_ID` CHAR(36) NOT NULL ,
  `NAME` VARCHAR(50) NOT NULL ,
  `DESCRIPTION` VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
  `EXEC_SEQUENCE` INT NOT NULL ,
  `SELECT_COMPONENT` VARCHAR(500) NOT NULL ,
  `FROM_COMPONENT` VARCHAR(200) NOT NULL ,
  `WHERE_COMPONENT` VARCHAR(500) NULL ,
  `ORDER_BY_COMPONENT` VARCHAR(100) NULL ,
  `EXEC_QUERY` VARCHAR(3000) NULL,
  `ROW_TYPE` VARCHAR(12) NOT NULL,
  `DATA_TYPE` VARCHAR(20) NOT NULL,
  `MAPPING_TYPE` VARCHAR(15) NOT NULL,
  `CREATED_BY` CHAR(36) NOT NULL,
  `CREATED_ON` BIGINT NOT NULL,
  `LAST_UPDATED_BY` CHAR(36) NULL,
  `LAST_UPDATED_ON` BIGINT NULL,
  PRIMARY KEY (`ID`)
)
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table `SYND_DATA_QUERY_INPUTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_INPUTS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_INPUTS` (
  `ID` CHAR(36) NOT NULL ,
  `TENANT_ID` CHAR(36) NULL ,
  `SYNDICATE_DATA_QUERY_ID` CHAR(36) NOT NULL ,
  `NAME` VARCHAR(50) NULL ,
  `DATA_TYPE` VARCHAR(25) NOT NULL ,
  `SAMPLE_VALUE` VARCHAR(50) NULL ,
  `MANDATORY` TINYINT NOT NULL,
  `CREATED_BY` CHAR(36) NOT NULL,
  `CREATED_ON` BIGINT NOT NULL,
  `LAST_UPDATED_BY` CHAR(36) NULL,
  `LAST_UPDATED_ON` BIGINT NULL,
  PRIMARY KEY (`ID`) ,
  CONSTRAINT FK_INPUTS_QUERYS FOREIGN KEY (SYNDICATE_DATA_QUERY_ID) REFERENCES SYNDICATE_DATA_QUERY(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table `SYNDICATE_DATA_QUERY_OUTPUTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_OUTPUTS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_OUTPUTS` (
  `ID` CHAR(36) NOT NULL ,
  `TENANT_ID` CHAR(36) NULL ,
  `SYNDICATE_DATA_QUERY_ID` CHAR(36) NOT NULL ,
  `NAME` VARCHAR(50) NULL ,
  `DATA_TYPE` VARCHAR(25) NOT NULL ,
  `MANDATORY` TINYINT NOT NULL,
  `SEQUENCE` INT NOT NULL,
  `CREATED_BY` CHAR(36) NOT NULL,
  `CREATED_ON` BIGINT NOT NULL,
  `LAST_UPDATED_BY` CHAR(36) NULL,
  `LAST_UPDATED_ON` BIGINT NULL,
  PRIMARY KEY (`ID`) ,
  CONSTRAINT FK_OUTPUTS_QUERYS FOREIGN KEY (SYNDICATE_DATA_QUERY_ID) REFERENCES SYNDICATE_DATA_QUERY(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION )
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Table `SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT` (
  `ID` CHAR(36),
  `TENANT_ID` CHAR(36),
  `TYPE_NAME` VARCHAR(50),
  CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  `REV` INT(11) NOT NULL,
  `REVTYPE` TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table `SYNDICATE_DATA_QUERY_AUDIT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_AUDIT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_AUDIT` (
  `ID` CHAR(36) NOT NULL,
  `TENANT_ID` CHAR(36) NULL,
  `MAPPING_ID` CHAR(36) NULL,
  `NAME` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
  `EXEC_SEQUENCE` INT NOT NULL ,
  `SELECT_COMPONENT` VARCHAR(500) NULL,
  `FROM_COMPONENT` VARCHAR(200) NULL,
  `WHERE_COMPONENT` VARCHAR(500) NULL,
  `ORDER_BY_COMPONENT` VARCHAR(100) NULL,
  `EXEC_QUERY` VARCHAR(3000) NULL,
  `ROW_TYPE` VARCHAR(12) NULL,
  `DATA_TYPE` VARCHAR(20) NULL,
  `MAPPING_TYPE` VARCHAR(15) NULL,
    CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  `REV` INT(11) NOT NULL,
  `REVTYPE` TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table `SYND_DATA_QUERY_INPUTS_AUDIT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_INPUTS_AUDIT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_INPUTS_AUDIT` (
  `ID` CHAR(36) NOT NULL ,
  `TENANT_ID` CHAR(36) NULL ,
  `SYNDICATE_DATA_QUERY_ID` CHAR(36) NULL ,
  `NAME` VARCHAR(50) NULL ,
  `DATA_TYPE` VARCHAR(25) NULL ,
  `SAMPLE_VALUE` VARCHAR(50) NULL ,
  `MANDATORY` TINYINT NULL,
    CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  `REV` INT(11) NOT NULL,
  `REVTYPE` TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_INPUTS_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_INPUTS_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT` (
  `ID` CHAR(36) NOT NULL ,
  `TENANT_ID` CHAR(36) NULL ,
  `SYNDICATE_DATA_QUERY_ID` CHAR(36) NULL ,
  `NAME` VARCHAR(50) NULL ,
  `DATA_TYPE` VARCHAR(25) NULL ,
  `MANDATORY` TINYINT NULL,
  `SEQUENCE`INT,
    CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  `REV` INT(11) NOT NULL,
  `REVTYPE` TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



CREATE TABLE UMG_RUNTIME_TRANSACTION (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
  CLIENT_TRANSACTION_ID VARCHAR(50) NOT NULL COMMENT 'Transaction Number',
  LIBRARY_NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model library, given by user as TAG.',
  VERSION_NAME VARCHAR(100) NOT NULL COMMENT 'umg version used for the transaction - Tenant Model Name in UI',
  MAJOR_VERSION INT(10) NOT NULL COMMENT 'Major version',
  MINOR_VERSION INT(10) NOT NULL COMMENT 'Minor version',
  STATUS VARCHAR(10) NOT NULL COMMENT 'Transaction Status',
  TENANT_INPUT BLOB NOT NULL COMMENT 'The actual tenant input.',
  TENANT_OUTPUT MEDIUMBLOB NOT NULL COMMENT 'The actual tenant output.',
  MODEL_INPUT BLOB NOT NULL COMMENT 'The actual input for the model.',
  MODEL_OUTPUT MEDIUMBLOB NOT NULL COMMENT 'The actual output from the model.',
  RUN_AS_OF_DATE BIGINT(20) NOT NULL COMMENT 'Run Date From',
  RUNTIME_CALL_START BIGINT(20) NULL COMMENT 'Runtime Call Start Time',
  RUNTIME_CALL_END BIGINT(20) NULL COMMENT 'Runtime Call End Time',
  MODEL_CALL_START BIGINT(20) NULL COMMENT 'Model Call Start Time',
  MODEL_CALL_END BIGINT(20) NULL COMMENT 'Model Call End Time',
  IS_TEST TINYINT NOT NULL COMMENT 'Transaction run during test bed',
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (ID)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE UMG_RUNTIME_TRANSACTION_AUDIT (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) COMMENT 'Tenant code for the record',
  CLIENT_TRANSACTION_ID VARCHAR(50) COMMENT 'Transaction Number',
  LIBRARY_NAME VARCHAR(50) COMMENT 'Name of the model library, given by user as TAG.',
  VERSION_NAME VARCHAR(100) COMMENT 'umg version used for the transaction - Tenant Model Name in UI',
  MAJOR_VERSION INT(10) COMMENT 'Major version',
  MINOR_VERSION INT(10) COMMENT 'Minor version',
  STATUS VARCHAR(10) COMMENT 'Transaction Status',
  TENANT_INPUT BLOB COMMENT 'The actual tenant input.',
  TENANT_OUTPUT MEDIUMBLOB COMMENT 'The actual tenant output.',
  MODEL_INPUT BLOB COMMENT 'The actual input for the model.',
  MODEL_OUTPUT MEDIUMBLOB COMMENT 'The actual output from the model.',
  RUN_AS_OF_DATE BIGINT(20) COMMENT 'Run Date From',
  RUNTIME_CALL_START BIGINT(20) COMMENT 'Runtime Call Start Time',
  RUNTIME_CALL_END BIGINT(20) COMMENT 'Runtime Call End Time',
  MODEL_CALL_START BIGINT(20) COMMENT 'Model Call Start Time',
  MODEL_CALL_END BIGINT(20) COMMENT 'Model Call End Time',
  IS_TEST TINYINT COMMENT 'Transaction run during test bed',
  CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID),
  KEY IDX_UMG_RUNTIME_TRANSACTION_AUDIT_REVINFO (REV),
  CONSTRAINT FK_UMG_RUNTIME_TRANSACTION_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE UMG_VERSION (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
  NAME VARCHAR(100) NOT NULL COMMENT 'Name of the UMG verison',
  DESCRIPTION VARCHAR(250) NOT NULL COMMENT 'Description of UMG Version',
  MAJOR_VERSION INT(10) NOT NULL COMMENT 'Major version',
  MINOR_VERSION INT(10) NOT NULL COMMENT 'Minor version',
  MAPPING_ID CHAR(36) NOT NULL COMMENT 'Mapping used by this version',
  MODEL_LIBRARY_ID CHAR(36) NOT NULL COMMENT 'MODEL library used by this version',
  STATUS VARCHAR(20),
  VERSION_DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of major or minor version',
  PUBLISHED_ON  BIGINT(20) COMMENT 'UMG version published time.',
  PUBLISHED_BY CHAR(36) COMMENT 'User who published the umg version',
  DEACTIVATED_ON BIGINT COMMENT 'UMG version deactivated time.',
  DEACTIVATED_BY CHAR(36) COMMENT 'User who deactivated the umg version',
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (ID),
  UNIQUE INDEX UN_UMG_VERSION (TENANT_ID,NAME,MAJOR_VERSION,MINOR_VERSION),
  INDEX FK_IDX_UMG_VERSION_MAPPING (MAPPING_ID),
  INDEX FK_IDX_UMG_VERSION_MODEL_LIBRARY (MODEL_LIBRARY_ID),
  CONSTRAINT FK_UMG_VERSION_MAPPING FOREIGN KEY (MAPPING_ID) REFERENCES MAPPING(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_UMG_VERSION_MODEL_LIBRARY FOREIGN KEY (MODEL_LIBRARY_ID) REFERENCES MODEL_LIBRARY(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE UMG_VERSION_AUDIT (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) COMMENT 'Tenant code for the record',
  NAME VARCHAR(100)  COMMENT 'Name of the UMG verison',
  DESCRIPTION VARCHAR(200) COMMENT 'Description of UMG Version',
  MAJOR_VERSION INT(10) COMMENT 'Major version',
  MINOR_VERSION INT(10) COMMENT 'Minor version',
  MAPPING_ID CHAR(36) COMMENT 'Mapping used by this version',
  MODEL_LIBRARY_ID CHAR(36) COMMENT 'MODEL library used by this version',
  STATUS VARCHAR(20),
  VERSION_DESCRIPTION VARCHAR(200)  COMMENT 'Description of major or minor version',
  PUBLISHED_ON  BIGINT(20) COMMENT 'UMG version published time.',
  PUBLISHED_BY CHAR(36) COMMENT 'User who published the umg version',
  DEACTIVATED_ON BIGINT COMMENT 'UMG version deactivated time.',
  DEACTIVATED_BY CHAR(36) COMMENT 'User who deactivated the umg version',
  CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_UMG_VERSION_AUDIT_REVINFO (REV),
  CONSTRAINT FK_UMG_VERSION_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

DELETE FROM SYNDICATE_DATA_QUERY_RESULT_TYPES;
INSERT INTO SYNDICATE_DATA_QUERY_RESULT_TYPES(ID, TENANT_ID, TYPE_NAME, CREATED_BY, CREATED_ON, LAST_UPDATED_BY, LAST_UPDATED_ON) VALUES('05a68810-e6f9-11e3-a68a-82687f4fc15c', 'localhost', 'SINGLEROW', 'SYSTEM', TO_SECONDS(NOW()), null, null);
INSERT INTO SYNDICATE_DATA_QUERY_RESULT_TYPES(ID, TENANT_ID, TYPE_NAME, CREATED_BY, CREATED_ON, LAST_UPDATED_BY, LAST_UPDATED_ON) VALUES('05be454a-e6f9-11e3-a68a-82687f4fc15c', 'localhost', 'MULTIPLEROW', 'SYSTEM', TO_SECONDS(NOW()), null, null);
INSERT INTO SYNDICATE_DATA_QUERY_RESULT_TYPES(ID, TENANT_ID, TYPE_NAME, CREATED_BY, CREATED_ON, LAST_UPDATED_BY, LAST_UPDATED_ON) VALUES('05a6881b-e6f9-11e3-a68a-82687f4fc15c', 'localhost', 'ARRAY', 'SYSTEM', TO_SECONDS(NOW()), null, null);
INSERT INTO SYNDICATE_DATA_QUERY_RESULT_TYPES(ID, TENANT_ID, TYPE_NAME, CREATED_BY, CREATED_ON, LAST_UPDATED_BY, LAST_UPDATED_ON) VALUES('05be454c-e6f9-11e3-a68a-82687f4fc15c', 'localhost', 'OBJECT', 'SYSTEM', TO_SECONDS(NOW()), null, null);
INSERT INTO SYNDICATE_DATA_QUERY_RESULT_TYPES(ID, TENANT_ID, TYPE_NAME, CREATED_BY, CREATED_ON, LAST_UPDATED_BY, LAST_UPDATED_ON) VALUES('05be454c-e6f9-11e3-a68a-8261234fc15c', 'localhost', 'PRIMITIVE', 'SYSTEM', TO_SECONDS(NOW()), null, null);


ALTER TABLE MODEL_LIBRARY
ADD COLUMN `CHECKSUM_TYPE` VARCHAR(45) NOT NULL AFTER `JAR_NAME`,
ADD COLUMN `CHECKSUM_VALUE` VARCHAR(100) NOT NULL AFTER `CHECKSUM_TYPE`;

ALTER TABLE MODEL_LIBRARY_AUDIT
ADD COLUMN `CHECKSUM_TYPE` VARCHAR(45) NULL DEFAULT NULL AFTER `JAR_NAME`,
ADD COLUMN `CHECKSUM_VALUE` VARCHAR(100) NULL DEFAULT NULL AFTER `CHECKSUM_TYPE`;

/*UMG-1038 DB changed for model library to store checksum value*/


ALTER TABLE SYNDICATE_DATA_QUERY_INPUTS DROP COLUMN MANDATORY;
ALTER TABLE SYNDICATE_DATA_QUERY_INPUTS_AUDIT DROP COLUMN MANDATORY;
ALTER TABLE SYNDICATE_DATA_QUERY_OUTPUTS DROP COLUMN MANDATORY;
ALTER TABLE SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT DROP COLUMN MANDATORY;

/*The following scripts need to execute in ocwen schema also.*/
ALTER TABLE MAPPING_INPUT modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE MAPPING_INPUT modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE MAPPING modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE MAPPING_OUTPUT modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE MODEL modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE MODEL_DEFINITION modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE MODEL_LIBRARY modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE UMG_RUNTIME_TRANSACTION modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE UMG_VERSION modify COLUMN CREATED_BY VARCHAR(100)  COLLATE utf8_bin NOT NULL;
ALTER TABLE MAPPING modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE MAPPING_OUTPUT modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE MODEL modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE MODEL_DEFINITION modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE MODEL_LIBRARY modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE UMG_RUNTIME_TRANSACTION modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;
ALTER TABLE UMG_VERSION modify COLUMN LAST_UPDATED_BY VARCHAR(100)   COLLATE utf8_bin DEFAULT NULL;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `TEMP_TENANT_INPUT` MEDIUMBLOB NULL AFTER `TENANT_INPUT`;


update UMG_RUNTIME_TRANSACTION set TEMP_TENANT_INPUT=TENANT_INPUT ;


ALTER TABLE `UMG_RUNTIME_TRANSACTION`
DROP COLUMN `TENANT_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TEMP_TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NULL DEFAULT NULL ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NOT NULL ;

--
ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `TEMP_MODEL_INPUT` MEDIUMBLOB NULL AFTER `MODEL_INPUT`;

update UMG_RUNTIME_TRANSACTION set TEMP_MODEL_INPUT=MODEL_INPUT ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
DROP COLUMN `MODEL_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TEMP_MODEL_INPUT` `MODEL_INPUT` MEDIUMBLOB NOT NULL ;

/*UMG_RUNTIME_TRANSACTION_AUDIT*/

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `TEMP_TENANT_INPUT` MEDIUMBLOB NULL AFTER `TENANT_INPUT`;


update UMG_RUNTIME_TRANSACTION_AUDIT set TEMP_TENANT_INPUT=TENANT_INPUT ;


ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
DROP COLUMN `TENANT_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TEMP_TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NULL DEFAULT NULL ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NOT NULL ;

--
ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `TEMP_MODEL_INPUT` MEDIUMBLOB NULL AFTER `MODEL_INPUT`;

update UMG_RUNTIME_TRANSACTION_AUDIT set TEMP_MODEL_INPUT=MODEL_INPUT ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
DROP COLUMN `MODEL_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TEMP_MODEL_INPUT` `MODEL_INPUT` MEDIUMBLOB NOT NULL ;

CREATE TABLE MIGRATION_LOG (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
  VERSION_ID CHAR(36) COMMENT 'Version ID which is imported / exported',
  MIGRATION_TYPE VARCHAR(10) NOT NULL COMMENT 'Specifies whether it was an import / export entry',
  VERSION_DATA BLOB COMMENT 'Version Details',
  STATUS VARCHAR(20) NOT NULL COMMENT 'Migration Status',
  CREATED_BY CHAR(36) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(36) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  PRIMARY KEY (ID),
  CONSTRAINT FK_VERSION FOREIGN KEY (VERSION_ID) REFERENCES UMG_VERSION(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

ALTER TABLE UMG_RUNTIME_TRANSACTION ADD COLUMN ERROR_CODE CHAR(10) COMMENT 'Error code received while execution Model.';
ALTER TABLE UMG_RUNTIME_TRANSACTION ADD COLUMN ERROR_DESCRIPTION  VARCHAR(500) COLLATE utf8_bin DEFAULT NULL COMMENT 'Error description while Model execution.';

ALTER TABLE UMG_RUNTIME_TRANSACTION_AUDIT ADD COLUMN ERROR_CODE CHAR(10) COMMENT 'Error code received while execution Model.';
ALTER TABLE UMG_RUNTIME_TRANSACTION_AUDIT ADD COLUMN ERROR_DESCRIPTION  VARCHAR(500) COLLATE utf8_bin DEFAULT NULL COMMENT 'Error description while Model execution.';

-- `MODEL_DEFINITION`

ALTER TABLE `MODEL_DEFINITION`
        ADD COLUMN `Temp_IO_Def` MEDIUMBLOB NULL AFTER `IO_DEFINITION`;

update MODEL_DEFINITION set Temp_IO_Def=IO_DEFINITION ;

ALTER TABLE `MODEL_DEFINITION`
        DROP COLUMN `IO_DEFINITION`;

ALTER TABLE `MODEL_DEFINITION`
        CHANGE COLUMN `Temp_IO_Def` `IO_DEFINITION` MEDIUMBLOB NOT NULL COMMENT 'The actual input output defintion for the model.' AFTER `IO_TYPE`;


-- `MODEL_DEFINITION_AUDIT`

ALTER TABLE `MODEL_DEFINITION_AUDIT`
        ADD COLUMN `Temp_IO_Def` MEDIUMBLOB NULL AFTER `IO_DEFINITION`;

update MODEL_DEFINITION_AUDIT set Temp_IO_Def=IO_DEFINITION ;

ALTER TABLE `MODEL_DEFINITION_AUDIT`
        DROP COLUMN `IO_DEFINITION`;

ALTER TABLE `MODEL_DEFINITION_AUDIT`
        CHANGE COLUMN `Temp_IO_Def` `IO_DEFINITION` MEDIUMBLOB NOT NULL COMMENT 'The actual input output defintion for the model.' AFTER `IO_TYPE`;


ALTER TABLE MODEL ADD COLUMN `ALLOW_NULL` TINYINT(4) NOT NULL DEFAULT 1
COMMENT 'Flag to know whether to allow nulls or not' AFTER DOC_NAME;

ALTER TABLE MODEL_AUDIT ADD COLUMN `ALLOW_NULL` TINYINT(4) NOT NULL AFTER DOC_NAME;


-- -----------------------------------------------------
-- Table `BATCH_TRANSACTION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BATCH_TRANSACTION` (
  ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  BATCH_FILE_NAME VARCHAR(100) NOT NULL,
  STATUS VARCHAR(25) NOT NULL,
  START_TIME BIGINT(20) NULL,
  END_TIME BIGINT(20) NULL,
  TOTAL_RECORDS BIGINT NULL,
  SUCCESS_COUNT BIGINT NULL,
  FAIL_COUNT BIGINT NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BATCH_TXN_RUNTIME_TXN_MAPPING`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BATCH_TXN_RUNTIME_TXN_MAPPING` (
  ID CHAR(36) NOT NULL,
  BATCH_ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  TRANSACTION_ID CHAR(36) NOT NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.')
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `TRANSPORT_PARAMETER_VALUES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TRANSPORT_PARAMETER_VALUES` (
  ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(45) NOT NULL,
  TRANSPORT_NAME VARCHAR(45) NOT NULL,
  PARAMETER_NAME VARCHAR(45) NULL,
  PARAMETER_VALUE VARCHAR(45) NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

ALTER TABLE MIGRATION_LOG DROP FOREIGN KEY FK_VERSION;

ALTER TABLE `BATCH_TXN_RUNTIME_TXN_MAPPING`
        ADD COLUMN `STATUS` VARCHAR(50) NULL AFTER `TRANSACTION_ID`,
        ADD COLUMN `ERROR` VARCHAR(50) NULL AFTER `STATUS`;

ALTER TABLE `BATCH_TXN_RUNTIME_TXN_MAPPING`
        ADD CONSTRAINT `FK_BATCH_RUNTIME_TXN_MAPPING_BATCH` FOREIGN KEY (`BATCH_ID`) REFERENCES `BATCH_TRANSACTION` (`ID`) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `TEMP_ERROR_DESCRIPTION` BLOB NULL AFTER `ERROR_DESCRIPTION`;

update `UMG_RUNTIME_TRANSACTION` set TEMP_ERROR_DESCRIPTION=ERROR_DESCRIPTION ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION` DROP COLUMN `ERROR_DESCRIPTION`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TEMP_ERROR_DESCRIPTION` `ERROR_DESCRIPTION` BLOB NULL DEFAULT NULL ;



ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `TEMP_ERROR_DESCRIPTION` BLOB NULL AFTER `ERROR_DESCRIPTION`;

update `UMG_RUNTIME_TRANSACTION_AUDIT` set TEMP_ERROR_DESCRIPTION = ERROR_DESCRIPTION ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT` DROP COLUMN `ERROR_DESCRIPTION`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TEMP_ERROR_DESCRIPTION` `ERROR_DESCRIPTION` BLOB NULL DEFAULT NULL ;

ALTER TABLE `BATCH_TRANSACTION`
CHANGE COLUMN `BATCH_FILE_NAME` `BATCH_INPUT_FILE` VARCHAR(100) NOT NULL COLLATE 'utf8_bin' AFTER `TENANT_ID`,
ADD COLUMN `BATCH_OUTPUT_FILE` VARCHAR(100) NULL AFTER `BATCH_INPUT_FILE`,
ADD COLUMN `IS_TEST` TINYINT(4) NOT NULL DEFAULT '1' COMMENT 'Indicates whether the upload is from test bed' AFTER `STATUS`;

ALTER TABLE `BATCH_TRANSACTION`
ADD COLUMN `BATCH_OUTPUT_FILE_TEMP` VARCHAR(200) NULL AFTER `BATCH_OUTPUT_FILE`;

update `BATCH_TRANSACTION` set BATCH_OUTPUT_FILE_TEMP = BATCH_OUTPUT_FILE ;

ALTER TABLE `BATCH_TRANSACTION` DROP COLUMN `BATCH_OUTPUT_FILE`;

ALTER TABLE `BATCH_TRANSACTION`
CHANGE COLUMN `BATCH_OUTPUT_FILE_TEMP` `BATCH_OUTPUT_FILE` VARCHAR(200) DEFAULT NULL ;

ALTER TABLE `BATCH_TRANSACTION`
ADD COLUMN `BATCH_INPUT_FILE_TEMP` VARCHAR(200) NULL AFTER `BATCH_INPUT_FILE`;

update `BATCH_TRANSACTION` set BATCH_INPUT_FILE_TEMP = BATCH_INPUT_FILE ;

ALTER TABLE `BATCH_TRANSACTION` DROP COLUMN `BATCH_INPUT_FILE`;

ALTER TABLE `BATCH_TRANSACTION`
CHANGE COLUMN `BATCH_INPUT_FILE_TEMP` `BATCH_INPUT_FILE` VARCHAR(200) DEFAULT NULL ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `MODEL_EXECUTION_TIME` bigint(20) default null;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `MODELET_EXECUTION_TIME` bigint(20) default null;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `ME2_WAITING_TIME` bigint(20) default null;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `MODEL_EXECUTION_TIME` bigint(20) default null;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `MODELET_EXECUTION_TIME` bigint(20) default null;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `ME2_WAITING_TIME` bigint(20) default null;
-- `MODEL_DEFINITION`

ALTER TABLE `MODEL_DEFINITION`
        ADD COLUMN `Temp_IO_Def` MEDIUMBLOB NULL AFTER `IO_DEFINITION`;

update MODEL_DEFINITION set Temp_IO_Def=IO_DEFINITION ;

ALTER TABLE `MODEL_DEFINITION`
        DROP COLUMN `IO_DEFINITION`;

ALTER TABLE `MODEL_DEFINITION`
        CHANGE COLUMN `Temp_IO_Def` `IO_DEFINITION` MEDIUMBLOB NOT NULL COMMENT 'The actual input output defintion for the model.' AFTER `IO_TYPE`;


-- `MODEL_DEFINITION_AUDIT`

ALTER TABLE `MODEL_DEFINITION_AUDIT`
        ADD COLUMN `Temp_IO_Def` MEDIUMBLOB NULL AFTER `IO_DEFINITION`;

update MODEL_DEFINITION_AUDIT set Temp_IO_Def=IO_DEFINITION ;

ALTER TABLE `MODEL_DEFINITION_AUDIT`
        DROP COLUMN `IO_DEFINITION`;

ALTER TABLE `MODEL_DEFINITION_AUDIT`
        CHANGE COLUMN `Temp_IO_Def` `IO_DEFINITION` MEDIUMBLOB NOT NULL COMMENT 'The actual input output defintion for the model.' AFTER `IO_TYPE`;



ALTER TABLE `UMG_RUNTIME_TRANSACTION`
                CHANGE COLUMN `ERROR_DESCRIPTION` `ERROR_DESCRIPTION` VARCHAR(1500) NULL DEFAULT NULL COMMENT 'Error description while Model execution.' COLLATE 'utf8_bin' AFTER `ERROR_CODE`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
                CHANGE COLUMN `ERROR_DESCRIPTION` `ERROR_DESCRIPTION` VARCHAR(1500) NULL DEFAULT NULL COMMENT 'Error description while Model execution.' COLLATE 'utf8_bin' AFTER `ERROR_CODE`;


-- UMG_RUNTIME_TRANSACTION

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `TEMP_TENANT_INPUT` MEDIUMBLOB NULL AFTER `TENANT_INPUT`;


update UMG_RUNTIME_TRANSACTION set TEMP_TENANT_INPUT=TENANT_INPUT ;


ALTER TABLE `UMG_RUNTIME_TRANSACTION`
DROP COLUMN `TENANT_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TEMP_TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NULL DEFAULT NULL ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NOT NULL ;

--
ALTER TABLE `UMG_RUNTIME_TRANSACTION`
ADD COLUMN `TEMP_MODEL_INPUT` MEDIUMBLOB NULL AFTER `MODEL_INPUT`;

update UMG_RUNTIME_TRANSACTION set TEMP_MODEL_INPUT=MODEL_INPUT ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
DROP COLUMN `MODEL_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION`
CHANGE COLUMN `TEMP_MODEL_INPUT` `MODEL_INPUT` MEDIUMBLOB NOT NULL ;

-- UMG_RUNTIME_TRANSACTION_AUDIT

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `TEMP_TENANT_INPUT` MEDIUMBLOB NULL AFTER `TENANT_INPUT`;


update UMG_RUNTIME_TRANSACTION_AUDIT set TEMP_TENANT_INPUT=TENANT_INPUT ;


ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
DROP COLUMN `TENANT_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TEMP_TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NULL DEFAULT NULL ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TENANT_INPUT` `TENANT_INPUT` MEDIUMBLOB NOT NULL ;

--
ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
ADD COLUMN `TEMP_MODEL_INPUT` MEDIUMBLOB NULL AFTER `MODEL_INPUT`;

update UMG_RUNTIME_TRANSACTION_AUDIT set TEMP_MODEL_INPUT=MODEL_INPUT ;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
DROP COLUMN `MODEL_INPUT`;

ALTER TABLE `UMG_RUNTIME_TRANSACTION_AUDIT`
CHANGE COLUMN `TEMP_MODEL_INPUT` `MODEL_INPUT` MEDIUMBLOB NOT NULL ;





















