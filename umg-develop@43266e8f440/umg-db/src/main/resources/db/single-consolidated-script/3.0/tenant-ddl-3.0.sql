use ocwen;

DROP TABLE IF EXISTS UMG_VERSION_AUDIT;
DROP TABLE IF EXISTS UMG_VERSION;
DROP TABLE IF EXISTS MAPPING_INPUT_AUDIT;
DROP TABLE IF EXISTS MAPPING_INPUT;
DROP TABLE IF EXISTS MAPPING_OUTPUT_AUDIT;
DROP TABLE IF EXISTS MAPPING_OUTPUT;
DROP TABLE IF EXISTS MAPPING_AUDIT;
DROP TABLE IF EXISTS MAPPING;
DROP TABLE IF EXISTS MODEL_DEFINITION_AUDIT;
DROP TABLE IF EXISTS MODEL_DEFINITION;
DROP TABLE IF EXISTS MODEL_AUDIT;
DROP TABLE IF EXISTS MODEL;
DROP TABLE IF EXISTS MODEL_LIB_EXEC_PKG_MAPPING_AUDIT;
DROP TABLE IF EXISTS MODEL_LIB_EXEC_PKG_MAPPING;
DROP TABLE IF EXISTS MEDIATE_MODEL_LIBRARY;
DROP TABLE IF EXISTS MEDIATE_MODEL_LIBRARY_AUDIT;
DROP TABLE IF EXISTS MODEL_LIBRARY_AUDIT;
DROP TABLE IF EXISTS MODEL_LIBRARY;
DROP TABLE IF EXISTS BATCH_TXN_RUNTIME_TXN_MAPPING;
DROP TABLE IF EXISTS BATCH_TRANSACTION;
DROP TABLE IF EXISTS UMG_RUNTIME_TRANSACTION_AUDIT;
DROP TABLE IF EXISTS UMG_RUNTIME_TRANSACTION;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_INPUTS_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_AUDIT ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_RESULT_TYPES ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_OUTPUTS ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY_INPUTS ;
DROP TABLE IF EXISTS SYNDICATE_DATA_QUERY ;
DROP TABLE IF EXISTS REVINFO;
DROP TABLE IF EXISTS USAGE_SEARCH_REQUEST_CANCEL;
DROP TABLE IF EXISTS MIGRATION_LOG;
DROP TABLE IF EXISTS TRANSPORT_PARAMETER_VALUES;

CREATE TABLE IF NOT EXISTS REVINFO (
  REV int(11) NOT NULL AUTO_INCREMENT,
  REVTSTMP bigint(20) DEFAULT NULL,
  REVBY VARCHAR(100),
  PRIMARY KEY (REV)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;




CREATE TABLE IF NOT EXISTS MODEL_LIBRARY (
	ID CHARACTER(36) NOT NULL,
	TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
	NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model library, given by user as TAG.',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of the model library.',
	UMG_NAME VARCHAR(100) NOT NULL COMMENT 'UMG provided name of the model library. TAG-MM-DD-YYYY-HH-MM',
	EXECUTION_LANGUAGE VARCHAR(25) NOT NULL COMMENT 'The execution language for the version', 
	EXECUTION_TYPE VARCHAR(20) NOT NULL COMMENT 'The execution mechanism for the version', 
	JAR_NAME VARCHAR(100) NOT NULL COMMENT 'The name of the JAR uploaded against the library',
	CHECKSUM_TYPE VARCHAR(45) NOT NULL ,
	CHECKSUM_VALUE VARCHAR(100) NOT NULL,
	R_MANIFEST_FILE_NAME VARCHAR(200) NULL COMMENT 'R Manifest file name',
	PACKAGE_NAME VARCHAR(200) NULL,
	MODEL_EXEC_ENV_NAME VARCHAR(50) NOT NULL COMMENT 'Language name and version',
	CREATED_BY VARCHAR(100) NOT NULL, 
	CREATED_ON BIGINT NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL, 
	LAST_UPDATED_ON BIGINT NULL,
	PRIMARY KEY (ID),
	UNIQUE INDEX UN_MODEL_LIBRARY_UMG_NAME (UMG_NAME)
)
COMMENT='The table which contains the individual model library definitions'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MODEL_LIBRARY_AUDIT (
	ID CHARACTER(36) NOT NULL,
	TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
	NAME VARCHAR(50) COMMENT 'Name of the model library, given by user as TAG.',
	DESCRIPTION VARCHAR(200) COMMENT 'Description of the model library.',
	UMG_NAME VARCHAR(100) COMMENT 'UMG provided name of the model library. TAG-MM-DD-YYYY-HH-MM',
	EXECUTION_LANGUAGE VARCHAR(25) COMMENT 'The execution language for the version', 
	EXECUTION_TYPE VARCHAR(20) COMMENT 'The execution mechanism for the version', 
	JAR_NAME VARCHAR(100) COMMENT 'The name of the JAR uploaded against the library',
	CHECKSUM_TYPE VARCHAR(45) NULL DEFAULT NULL ,
	CHECKSUM_VALUE VARCHAR(100) NULL DEFAULT NULL,
	R_MANIFEST_FILE_NAME VARCHAR(200) NULL COMMENT 'R Manifest file name',
	PACKAGE_NAME VARCHAR(200) NULL,
	MODEL_EXEC_ENV_NAME VARCHAR(50) NOT NULL COMMENT 'Language name and version',
	CREATED_BY CHAR(100) NOT NULL ,
  	CREATED_ON BIGINT(20) NOT NULL,
  	LAST_UPDATED_BY CHAR(100) NULL,
  	LAST_UPDATED_ON BIGINT(20) NULL,
	REV INT(11) NOT NULL,
  	REVTYPE TINYINT(4) DEFAULT NULL,
	PRIMARY KEY (ID,REV),
  	KEY IDX_MODEL_LIBRARY_AUDIT_REVINFO (REV),
  	CONSTRAINT FK_MODEL_LIBRARY_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
COMMENT='The table which contains the individual model library definitions audit table'
DEFAULT CHARSET=utf8
COLLATE=utf8_bin
ENGINE=InnoDB;



CREATE TABLE IF NOT EXISTS MODEL (
	ID CHAR(36) NOT NULL,
 	TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
	NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model, given by user as TAG.',
	UMG_NAME VARCHAR(100) NOT NULL COMMENT 'UMG provided name of the model. TAG-MM-DD-YYYY-HH-MM',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of the model.',
	IO_DEFINITION_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the XML file uploaded. Useed to show on UI.',
	DOC_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the DOCUMENTATION file uploaded. Useed to show on UI.',
	ALLOW_NULL TINYINT(4) NOT NULL DEFAULT 1 COMMENT 'Flag to know whether to allow nulls or not',
	IO_DEF_EXCEL_NAME VARCHAR(100) NULL COMMENT 'Name of the Excel file uploaded. Useed to show on UI.',
	CREATED_BY VARCHAR(100) NOT NULL, 
	CREATED_ON BIGINT(20) NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL, 
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	PRIMARY KEY (ID),
	UNIQUE INDEX UN_MODEL_UMG_NAME (UMG_NAME)
)
COMMENT='The table which contains the individual model details'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MODEL_AUDIT (
	ID CHAR(36) NOT NULL,
 	TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
	NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model, given by user as TAG.',
	UMG_NAME VARCHAR(100) NOT NULL COMMENT 'UMG provided name of the model. TAG-MM-DD-YYYY-HH-MM',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of the model.',
	IO_DEFINITION_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the XML file uploaded. Useed to show on UI.',
	DOC_NAME VARCHAR(100) NOT NULL COMMENT 'Name of the DOCUMENTATION file uploaded. Useed to show on UI.',
	ALLOW_NULL TINYINT(4) NOT NULL DEFAULT 1 COMMENT 'Flag to know whether to allow nulls or not',
	IO_DEF_EXCEL_NAME VARCHAR(100) NULL COMMENT 'Name of the Excel file uploaded. Useed to show on UI.',
	CREATED_BY CHAR(100) NOT NULL ,
    CREATED_ON BIGINT(20) NOT NULL,
    LAST_UPDATED_BY CHAR(100) NULL,
    LAST_UPDATED_ON BIGINT(20) NULL,
	REV INT(11) NOT NULL,
  	REVTYPE TINYINT(4) DEFAULT NULL,
	PRIMARY KEY (ID,REV)

)
COMMENT='The table which contains the individual model audit details'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MODEL_DEFINITION (
	ID CHAR(36) NOT NULL, 
	TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
	IO_TYPE VARCHAR(50) NOT NULL COMMENT 'Type of model definition text/xml or application/json',
	IO_DEFINITION BLOB NOT NULL COMMENT 'The actual input output defintion for the model.', 
	MODEL_ID CHAR(36) NOT NULL COMMENT 'The model to which this definition belongs.',
	CREATED_BY VARCHAR(100) NOT NULL, 
	CREATED_ON BIGINT(20) NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL, 
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	PRIMARY KEY (ID),
	INDEX IDX_MODEL_ID (MODEL_ID),
	CONSTRAINT FK_MODEL FOREIGN KEY (MODEL_ID) REFERENCES MODEL (ID) ON UPDATE NO ACTION ON DELETE NO ACTION
)
COMMENT='The table which contains the individual model definitions'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MODEL_DEFINITION_AUDIT (
	ID CHAR(36) NOT NULL, 
	TENANT_ID CHAR(36) NULL COMMENT 'Tenant code for the record',
	IO_TYPE VARCHAR(50) COMMENT 'Type of model definition text/xml or application/json',
	IO_DEFINITION BLOB COMMENT 'The actual input output defintion for the model.', 
	MODEL_ID CHAR(36) COMMENT 'The model to which this definition belongs.',
	REV INT(11) NOT NULL,
  	REVTYPE TINYINT(4) DEFAULT NULL,
  	  CREATED_BY CHAR(100) NOT NULL ,
	  CREATED_ON BIGINT(20) NOT NULL,
	  LAST_UPDATED_BY CHAR(100) NULL,
	  LAST_UPDATED_ON BIGINT(20) NULL,
	PRIMARY KEY (ID,REV),
  	KEY IDX_MODEL_DEFINITION_AUDIT_REVINFO (REV),
  	CONSTRAINT FK_MODEL_DEFINITION_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
COMMENT='The table which contains the individual model definitions audit'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MAPPING (
  	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	NAME VARCHAR(100) NOT NULL COMMENT 'Derived name of the mapping.Includes version date' COLLATE 'utf8_bin',
	DESCRIPTION VARCHAR(200) NULL DEFAULT NULL COMMENT 'Description of the mapping.' COLLATE 'utf8_bin',
	MODEL_ID CHAR(36) NOT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
	MODEL_IO_DATA MEDIUMBLOB NULL,
	CREATED_BY VARCHAR(100) NOT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	TENANT_ID CHAR(36) NOT NULL DEFAULT 'davxotdrnq02' COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	STATUS VARCHAR(20) NOT NULL COLLATE 'utf8_bin',
	PRIMARY KEY (ID),
	UNIQUE INDEX UN_MAPPING_NAME (NAME),
	INDEX FK_MAPPING_MODEL (MODEL_ID),
	CONSTRAINT FK_MAPPING_MODEL FOREIGN KEY (MODEL_ID) REFERENCES MODEL (ID) ON UPDATE NO ACTION ON DELETE NO ACTION
) 
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MAPPING_AUDIT ( 
	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	REV INT(11) NOT NULL,
	REVTYPE TINYINT(4) NULL DEFAULT NULL,
	NAME VARCHAR(100) NULL DEFAULT NULL COMMENT 'Derived name of the mapping.Includes version date' COLLATE 'utf8_bin',
	DESCRIPTION VARCHAR(200) NULL DEFAULT NULL COMMENT 'Description of the mapping.' COLLATE 'utf8_bin',
	MODEL_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
	MODEL_IO_DATA MEDIUMBLOB NULL,
	TENANT_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	STATUS VARCHAR(20) NULL DEFAULT NULL COLLATE 'utf8_bin',
	CREATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NULL DEFAULT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	PRIMARY KEY (ID, REV),
	INDEX IDX_MAPPING_AUDIT_REVINFO (REV),
	CONSTRAINT FK_MAPPING_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
) 
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MAPPING_INPUT (
 	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	MAPPING_ID CHAR(36) NOT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
	MAPPING_DATA MEDIUMBLOB NULL,
	TENANT_INTERFACE_DEFINITION MEDIUMBLOB NULL,
	CREATED_BY VARCHAR(100) NOT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	TENANT_INTF_SYS_DEFINITION MEDIUMBLOB NULL,
	PRIMARY KEY (ID),
	UNIQUE INDEX UN_MAPPING_INPUT (MAPPING_ID),
	CONSTRAINT FK_MAPPING_INPUT_MAPPING FOREIGN KEY (MAPPING_ID) REFERENCES MAPPING (ID) ON UPDATE NO ACTION ON DELETE NO ACTION
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MAPPING_INPUT_AUDIT (
	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	REV INT(11) NOT NULL,
	REVTYPE TINYINT(4) NULL DEFAULT NULL,
	MAPPING_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
	MAPPING_DATA MEDIUMBLOB NULL,
	TENANT_INTERFACE_DEFINITION MEDIUMBLOB NULL,
	TENANT_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	TENANT_INTF_SYS_DEFINITION MEDIUMBLOB NULL,
	CREATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NULL DEFAULT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	PRIMARY KEY (ID, REV),
	INDEX IDX_MAPPING_INPUT_AUDIT_REVINFO (REV),
	CONSTRAINT FK_MAPPING_INPUT_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MAPPING_OUTPUT (
	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	MAPPING_ID CHAR(36) NOT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
	MAPPING_DATA MEDIUMBLOB NULL,
	TENANT_INTERFACE_DEFINITION MEDIUMBLOB NULL,
	CREATED_BY VARCHAR(100) NOT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	PRIMARY KEY (ID),
	UNIQUE INDEX UN_MAPPING_OUTPUT (MAPPING_ID),
	CONSTRAINT FK_MAPPING_OUTPUT_MAPPING FOREIGN KEY (MAPPING_ID) REFERENCES MAPPING (ID) ON UPDATE NO ACTION ON DELETE NO ACTION
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS MAPPING_OUTPUT_AUDIT (
	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	REV INT(11) NOT NULL,
	REVTYPE TINYINT(4) NULL DEFAULT NULL,
	MAPPING_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Model used for this mapping' COLLATE 'utf8_bin',
	MAPPING_DATA MEDIUMBLOB NULL,
	TENANT_INTERFACE_DEFINITION MEDIUMBLOB NULL,
	TENANT_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	CREATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NULL DEFAULT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	TEMP_MODEL_IO MEDIUMBLOB NULL,
	PRIMARY KEY (ID, REV),
	INDEX IDX_MAPPING_OUTPUT_AUDIT_REVINFO (REV),
	CONSTRAINT FK_MAPPING_OUTPUT_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;


CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_RESULT_TYPES (
  ID CHAR(36) NOT NULL ,
  TENANT_ID CHAR(36) NULL ,
  TYPE_NAME VARCHAR(50) NOT NULL ,
  CREATED_BY CHAR(36) NOT NULL, 
  CREATED_ON BIGINT NOT NULL,
  LAST_UPDATED_BY CHAR(36) NULL, 
  LAST_UPDATED_ON BIGINT NULL,
  PRIMARY KEY (ID),
  INDEX TYPE_NAME_IDX (TYPE_NAME))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY (
  ID CHAR(36) NOT NULL ,
  TENANT_ID CHAR(36) NULL ,
  MAPPING_ID CHAR(36) NOT NULL ,
  NAME VARCHAR(50) NOT NULL ,
  DESCRIPTION VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
  EXEC_SEQUENCE INT NOT NULL ,
  SELECT_COMPONENT VARCHAR(500) NOT NULL ,
  FROM_COMPONENT VARCHAR(200) NOT NULL ,
  WHERE_COMPONENT VARCHAR(500) NULL ,
  ORDER_BY_COMPONENT VARCHAR(100) NULL ,
  EXEC_QUERY VARCHAR(3000) NULL,
  ROW_TYPE VARCHAR(12) NOT NULL,
  DATA_TYPE VARCHAR(20) NOT NULL,
  MAPPING_TYPE VARCHAR(15) NOT NULL,
  CREATED_BY CHAR(36) NOT NULL, 
  CREATED_ON BIGINT NOT NULL,
  LAST_UPDATED_BY CHAR(36) NULL, 
  LAST_UPDATED_ON BIGINT NULL,
  PRIMARY KEY (ID)
)
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


-- -----------------------------------------------------
-- Table SYND_DATA_QUERY_INPUTS
-- -----------------------------------------------------

CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_INPUTS (
  ID CHAR(36) NOT NULL ,
  TENANT_ID CHAR(36) NULL ,
  SYNDICATE_DATA_QUERY_ID CHAR(36) NOT NULL ,
  NAME VARCHAR(50) NULL ,
  DATA_TYPE VARCHAR(25) NOT NULL ,
  SAMPLE_VALUE VARCHAR(50) NULL ,
  CREATED_BY CHAR(36) NOT NULL, 
  CREATED_ON BIGINT NOT NULL,
  LAST_UPDATED_BY CHAR(36) NULL, 
  LAST_UPDATED_ON BIGINT NULL,
  PRIMARY KEY (ID) ,
  CONSTRAINT FK_INPUTS_QUERYS FOREIGN KEY (SYNDICATE_DATA_QUERY_ID) REFERENCES SYNDICATE_DATA_QUERY(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table SYNDICATE_DATA_QUERY_OUTPUTS
-- -----------------------------------------------------

CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_OUTPUTS (
  ID CHAR(36) NOT NULL ,
  TENANT_ID CHAR(36) NULL ,
  SYNDICATE_DATA_QUERY_ID CHAR(36) NOT NULL ,
  NAME VARCHAR(50) NULL ,
  DATA_TYPE VARCHAR(25) NOT NULL ,
  SEQUENCE INT NOT NULL,
  CREATED_BY CHAR(36) NOT NULL, 
  CREATED_ON BIGINT NOT NULL,
  LAST_UPDATED_BY CHAR(36) NULL, 
  LAST_UPDATED_ON BIGINT NULL,
  PRIMARY KEY (ID) ,
  CONSTRAINT FK_OUTPUTS_QUERYS FOREIGN KEY (SYNDICATE_DATA_QUERY_ID) REFERENCES SYNDICATE_DATA_QUERY(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION )
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;



-- -----------------------------------------------------
-- Table SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT
-- -----------------------------------------------------

CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT (
  ID CHAR(36),
  TENANT_ID CHAR(36),
  TYPE_NAME VARCHAR(50),
  CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_RESULT_TYPES_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table SYNDICATE_DATA_QUERY_AUDIT
-- -----------------------------------------------------

CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_AUDIT (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NULL,
  MAPPING_ID CHAR(36) NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
  EXEC_SEQUENCE INT NOT NULL ,
  SELECT_COMPONENT VARCHAR(500) NULL,
  FROM_COMPONENT VARCHAR(200) NULL,
  WHERE_COMPONENT VARCHAR(500) NULL,
  ORDER_BY_COMPONENT VARCHAR(100) NULL,
  EXEC_QUERY VARCHAR(3000) NULL,
  ROW_TYPE VARCHAR(12) NULL,
  DATA_TYPE VARCHAR(20) NULL,
  MAPPING_TYPE VARCHAR(15) NULL,
    CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- -----------------------------------------------------
-- Table SYND_DATA_QUERY_INPUTS_AUDIT
-- -----------------------------------------------------

CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_INPUTS_AUDIT (
  ID CHAR(36) NOT NULL ,
  TENANT_ID CHAR(36) NULL ,
  SYNDICATE_DATA_QUERY_ID CHAR(36) NULL ,
  NAME VARCHAR(50) NULL ,
  DATA_TYPE VARCHAR(25) NULL ,
  SAMPLE_VALUE VARCHAR(50) NULL ,
   CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_INPUTS_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_INPUTS_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT
-- -----------------------------------------------------

CREATE  TABLE IF NOT EXISTS SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT (
  ID CHAR(36) NOT NULL ,
  TENANT_ID CHAR(36) NULL ,
  SYNDICATE_DATA_QUERY_ID CHAR(36) NULL ,
  NAME VARCHAR(50) NULL ,
  DATA_TYPE VARCHAR(25) NULL ,
  SEQUENCE INT,
    CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT_REVINFO (REV),
  CONSTRAINT FK_SYNDICATE_DATA_QUERY_OUTPUTS_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV))
ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;





CREATE TABLE IF NOT EXISTS UMG_RUNTIME_TRANSACTION (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
  CLIENT_TRANSACTION_ID VARCHAR(50) NOT NULL COMMENT 'Transaction Number',
  LIBRARY_NAME VARCHAR(50) NOT NULL COMMENT 'Name of the model library, given by user as TAG.',
  VERSION_NAME VARCHAR(100) NOT NULL COMMENT 'umg version used for the transaction - Tenant Model Name in UI',
  MAJOR_VERSION INT(10) NOT NULL COMMENT 'Major version',
  MINOR_VERSION INT(10) NOT NULL COMMENT 'Minor version',
  STATUS VARCHAR(10) NOT NULL COMMENT 'Transaction Status',
  TENANT_INPUT BLOB NOT NULL COMMENT 'The actual tenant input.',
  TENANT_OUTPUT MEDIUMBLOB NOT NULL COMMENT 'The actual tenant output.',
  MODEL_INPUT BLOB NOT NULL COMMENT 'The actual input for the model.',
  MODEL_OUTPUT MEDIUMBLOB NOT NULL COMMENT 'The actual output from the model.',
  RUN_AS_OF_DATE BIGINT(20) NOT NULL COMMENT 'Run Date From',
  RUNTIME_CALL_START BIGINT(20) NULL COMMENT 'Runtime Call Start Time',
  RUNTIME_CALL_END BIGINT(20) NULL COMMENT 'Runtime Call End Time',
  MODEL_CALL_START BIGINT(20) NULL COMMENT 'Model Call Start Time',
  MODEL_CALL_END BIGINT(20) NULL COMMENT 'Model Call End Time',
  IS_TEST TINYINT NOT NULL COMMENT 'Transaction run during test bed',
  ERROR_CODE CHAR(10) COMMENT 'Error code received while execution Model.',
  ERROR_DESCRIPTION  VARCHAR(1500) COLLATE utf8_bin DEFAULT NULL COMMENT 'Error description while Model execution.',
  MODEL_EXECUTION_TIME bigint(20) default null,
  MODELET_EXECUTION_TIME bigint(20) default null,
  ME2_WAITING_TIME bigint(20) default null,
  CREATED_BY VARCHAR(100) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY VARCHAR(100) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (ID)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

# index on created_on and model name
CREATE INDEX UMG_RUNTIME_TRANSACTION_INDEX_1 USING BTREE ON UMG_RUNTIME_TRANSACTION (CREATED_ON, VERSION_NAME);

CREATE TABLE IF NOT EXISTS UMG_RUNTIME_TRANSACTION_AUDIT (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) COMMENT 'Tenant code for the record',
  CLIENT_TRANSACTION_ID VARCHAR(50) COMMENT 'Transaction Number',
  LIBRARY_NAME VARCHAR(50) COMMENT 'Name of the model library, given by user as TAG.',  
  VERSION_NAME VARCHAR(100) COMMENT 'umg version used for the transaction - Tenant Model Name in UI',
  MAJOR_VERSION INT(10) COMMENT 'Major version',
  MINOR_VERSION INT(10) COMMENT 'Minor version',
  STATUS VARCHAR(10) COMMENT 'Transaction Status',
  TENANT_INPUT BLOB COMMENT 'The actual tenant input.',
  TENANT_OUTPUT MEDIUMBLOB COMMENT 'The actual tenant output.',
  MODEL_INPUT BLOB COMMENT 'The actual input for the model.',
  MODEL_OUTPUT MEDIUMBLOB COMMENT 'The actual output from the model.',
  RUN_AS_OF_DATE BIGINT(20) COMMENT 'Run Date From',
  RUNTIME_CALL_START BIGINT(20) COMMENT 'Runtime Call Start Time',
  RUNTIME_CALL_END BIGINT(20) COMMENT 'Runtime Call End Time',
  MODEL_CALL_START BIGINT(20) COMMENT 'Model Call Start Time',
  MODEL_CALL_END BIGINT(20) COMMENT 'Model Call End Time',
  IS_TEST TINYINT COMMENT 'Transaction run during test bed',
  ERROR_CODE CHAR(10) COMMENT 'Error code received while execution Model.',
  ERROR_DESCRIPTION  VARCHAR(1500) COLLATE utf8_bin DEFAULT NULL COMMENT 'Error description while Model execution.',
  MODEL_EXECUTION_TIME bigint(20) default null,
  MODELET_EXECUTION_TIME bigint(20) default null,
  ME2_WAITING_TIME bigint(20) default null,
  CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID),
  KEY IDX_UMG_RUNTIME_TRANSACTION_AUDIT_REVINFO (REV),
  CONSTRAINT FK_UMG_RUNTIME_TRANSACTION_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS UMG_VERSION (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
  NAME VARCHAR(100) NOT NULL COMMENT 'Name of the UMG verison',
  DESCRIPTION VARCHAR(250) NOT NULL COMMENT 'Description of UMG Version',
  MAJOR_VERSION INT(10) NOT NULL COMMENT 'Major version',
  MINOR_VERSION INT(10) NOT NULL COMMENT 'Minor version',
  MAPPING_ID CHAR(36) NOT NULL COMMENT 'Mapping used by this version',
  MODEL_LIBRARY_ID CHAR(36) NOT NULL COMMENT 'MODEL library used by this version',
  STATUS VARCHAR(20),
  VERSION_DESCRIPTION VARCHAR(200) NOT NULL COMMENT 'Description of major or minor version',
  PUBLISHED_ON  BIGINT(20) COMMENT 'UMG version published time.',
  PUBLISHED_BY CHAR(36) COMMENT 'User who published the umg version',
  DEACTIVATED_ON BIGINT COMMENT 'UMG version deactivated time.',
  DEACTIVATED_BY CHAR(36) COMMENT 'User who deactivated the umg version',
  CREATED_BY VARCHAR(100) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY VARCHAR(100) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (ID),
  UNIQUE INDEX UN_UMG_VERSION (TENANT_ID,NAME,MAJOR_VERSION,MINOR_VERSION),
  INDEX FK_IDX_UMG_VERSION_MAPPING (MAPPING_ID),
  INDEX FK_IDX_UMG_VERSION_MODEL_LIBRARY (MODEL_LIBRARY_ID),
  CONSTRAINT FK_UMG_VERSION_MAPPING FOREIGN KEY (MAPPING_ID) REFERENCES MAPPING(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_UMG_VERSION_MODEL_LIBRARY FOREIGN KEY (MODEL_LIBRARY_ID) REFERENCES MODEL_LIBRARY(ID)  ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS UMG_VERSION_AUDIT (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) COMMENT 'Tenant code for the record',
  NAME VARCHAR(100)  COMMENT 'Name of the UMG verison',
  DESCRIPTION VARCHAR(200) COMMENT 'Description of UMG Version',
  MAJOR_VERSION INT(10) COMMENT 'Major version',
  MINOR_VERSION INT(10) COMMENT 'Minor version',
  MAPPING_ID CHAR(36) COMMENT 'Mapping used by this version',
  MODEL_LIBRARY_ID CHAR(36) COMMENT 'MODEL library used by this version',
  STATUS VARCHAR(20),
  VERSION_DESCRIPTION VARCHAR(200)  COMMENT 'Description of major or minor version',
  PUBLISHED_ON  BIGINT(20) COMMENT 'UMG version published time.',
  PUBLISHED_BY CHAR(36) COMMENT 'User who published the umg version',
  DEACTIVATED_ON BIGINT COMMENT 'UMG version deactivated time.',
  DEACTIVATED_BY CHAR(36) COMMENT 'User who deactivated the umg version',
  CREATED_BY CHAR(100) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(100) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  REV INT(11) NOT NULL,
  REVTYPE TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (ID,REV),
  KEY IDX_UMG_VERSION_AUDIT_REVINFO (REV),
  CONSTRAINT FK_UMG_VERSION_AUDIT_REVINFO FOREIGN KEY (REV) REFERENCES REVINFO (REV)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;





/*UMG-1038 DB changed for model library to store checksum value*/




/*The following scripts need to execute in ocwen schema also.*/



CREATE TABLE IF NOT EXISTS MIGRATION_LOG (
  ID CHAR(36) NOT NULL,
  TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
  VERSION_ID CHAR(36) COMMENT 'Version ID which is imported / exported',
  MIGRATION_TYPE VARCHAR(10) NOT NULL COMMENT 'Specifies whether it was an import / export entry',
  VERSION_DATA BLOB COMMENT 'Version Details',
  STATUS VARCHAR(20) NOT NULL COMMENT 'Migration Status',
  CREATED_BY CHAR(36) NOT NULL ,
  CREATED_ON BIGINT(20) NOT NULL,
  LAST_UPDATED_BY CHAR(36) NULL,
  LAST_UPDATED_ON BIGINT(20) NULL,
  PRIMARY KEY (ID)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;




-- -----------------------------------------------------
-- Table BATCH_TRANSACTION
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS BATCH_TRANSACTION (
  ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  BATCH_INPUT_FILE VARCHAR(100) NOT NULL,
  BATCH_OUTPUT_FILE VARCHAR(100) NULL ,
  STATUS VARCHAR(25) NOT NULL,
  IS_TEST TINYINT(4) NOT NULL DEFAULT '1' COMMENT 'Indicates whether the upload is from test bed',
  START_TIME BIGINT(20) NULL, 
  END_TIME BIGINT(20) NULL, 
  TOTAL_RECORDS BIGINT NULL,
  SUCCESS_COUNT BIGINT NULL,
  FAIL_COUNT BIGINT NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (ID))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table BATCH_TXN_RUNTIME_TXN_MAPPING
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS BATCH_TXN_RUNTIME_TXN_MAPPING (
  ID CHAR(36) NOT NULL,
  BATCH_ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  TRANSACTION_ID CHAR(36) NOT NULL,
  STATUS VARCHAR(50) NULL ,
  ERROR VARCHAR(50) NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  CONSTRAINT FK_BATCH_RUNTIME_TXN_MAPPING_BATCH FOREIGN KEY (BATCH_ID) REFERENCES BATCH_TRANSACTION (ID) ON UPDATE NO ACTION ON DELETE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table TRANSPORT_PARAMETER_VALUES
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS TRANSPORT_PARAMETER_VALUES (
  ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(45) NOT NULL,
  TRANSPORT_NAME VARCHAR(45) NOT NULL,
  PARAMETER_NAME VARCHAR(45) NULL,
  PARAMETER_VALUE VARCHAR(45) NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (ID))
ENGINE = InnoDB;






CREATE TABLE IF NOT EXISTS MODEL_LIB_EXEC_PKG_MAPPING (
	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	MODEL_LIBRARY_ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	MODEL_EXEC_PKG_ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	EXEC_SEQUENCE INT(11) NOT NULL,
	CREATED_BY VARCHAR(100) NOT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NOT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	PRIMARY KEY (ID),
	INDEX FK_MODEL_LIBRARY_ID (MODEL_LIBRARY_ID),
	CONSTRAINT FK_MODEL_LIBRARY_ID FOREIGN KEY (MODEL_LIBRARY_ID) REFERENCES MODEL_LIBRARY (ID)
)
COMMENT='Mapping table to hold model library and execution package'
COLLATE='utf8_bin'
ENGINE=InnoDB;



CREATE TABLE IF NOT EXISTS MODEL_LIB_EXEC_PKG_MAPPING_AUDIT (
	ID CHAR(36) NOT NULL COLLATE 'utf8_bin',
	TENANT_ID CHAR(36) NULL DEFAULT NULL COMMENT 'Tenant code for the record' COLLATE 'utf8_bin',
	MODEL_LIBRARY_ID CHAR(36) NULL DEFAULT NULL COLLATE 'utf8_bin',
	MODEL_EXEC_PKG_ID CHAR(36) NULL DEFAULT NULL COLLATE 'utf8_bin',
	EXEC_SEQUENCE INT(11) NULL DEFAULT NULL,
	CREATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	CREATED_ON BIGINT(20) NULL DEFAULT NULL,
	LAST_UPDATED_BY VARCHAR(100) NULL DEFAULT NULL COLLATE 'utf8_bin',
	LAST_UPDATED_ON BIGINT(20) NULL DEFAULT NULL,
	REV INT(11) NOT NULL,
	REVTYPE TINYINT(4) NULL DEFAULT NULL,
	PRIMARY KEY (ID),
	INDEX FK_MODEL_LIB_EXEC_PKG_REV (REV),
	CONSTRAINT FK_MODEL_LIB_EXEC_PKG_REV FOREIGN KEY (REV) REFERENCES REVINFO (REV)
)
COMMENT='Mapping table to hold model library and execution package'
COLLATE='utf8_bin'
ENGINE=InnoDB
ROW_FORMAT=COMPACT;

CREATE TABLE IF NOT EXISTS USAGE_SEARCH_REQUEST_CANCEL (
                ID CHARACTER(36) NOT NULL COMMENT 'Unique Identifier',
                TENANT_ID CHAR(36) NOT NULL COMMENT 'Tenant code for the record',
                IS_USAGE_SEARCH_CANCEL TINYINT(4) NOT NULL COMMENT 'Flag to indicate whether request has been cancelled or not',
                CREATED_BY CHAR(36) NOT NULL, 
                CREATED_ON BIGINT NOT NULL,
                LAST_UPDATED_BY CHAR(36) NULL, 
                LAST_UPDATED_ON BIGINT NULL,
                PRIMARY KEY (ID)
)
COMMENT='contains cancellation status for all usage search requests'
DEFAULT CHARSET=utf8
COLLATE='utf8_bin'
ENGINE=InnoDB;


CREATE TABLE IF NOT EXISTS MEDIATE_MODEL_LIBRARY (
  ID char(36) NOT NULL,
  TAR_NAME varchar(100) NOT NULL,
  CHECKSUM_VALUE varchar(100) NOT NULL,
  CHECKSUM_TYPE varchar(45) NOT NULL,
  TENANT_ID char(36) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'Tenant code for the record',
  MODEL_EXEC_ENV_NAME VARCHAR(50) NOT NULL COMMENT 'Language name and version' COLLATE 'utf8_bin',
  CREATED_BY varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  CREATED_ON bigint(20) NOT NULL,
  LAST_UPDATED_BY varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  LAST_UPDATED_ON bigint(20) NOT NULL,
  PRIMARY KEY (ID) 
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping structure for table localhost.mediate_model_library_audit
CREATE TABLE IF NOT EXISTS MEDIATE_MODEL_LIBRARY_AUDIT (
  ID char(36) NOT NULL,
  TAR_NAME varchar(100) NOT NULL,
  CHECKSUM_VALUE varchar(100) NOT NULL,
  CHECKSUM_TYPE varchar(100) NOT NULL,
  MODEL_EXEC_ENV_NAME VARCHAR(50) NOT NULL COMMENT 'Language name and version' COLLATE 'utf8_bin',
  TENANT_ID char(36) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'Tenant code for the record',
  REV int(11) NOT NULL,
  CREATED_BY varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  REVTYPE tinyint(4) DEFAULT NULL,
  CREATED_ON bigint(20) NOT NULL,
  LAST_UPDATED_BY varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  LAST_UPDATED_ON bigint(20) NOT NULL,
  PRIMARY KEY (ID,REV),
  KEY FK_REV (REV),
  CONSTRAINT FK_REV FOREIGN KEY (REV) REFERENCES REVINFO (REV)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;




commit;


