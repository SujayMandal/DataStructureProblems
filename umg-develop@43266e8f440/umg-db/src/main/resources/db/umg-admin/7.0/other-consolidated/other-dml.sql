use `umg_admin`;
SET autocommit=0;


INSERT INTO `SYSTEM_KEY` (`ID`, `SYSTEM_KEY`, `KEY_TYPE`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_BY`, `LAST_UPDATED_ON`) VALUES (UUID(),'BULK_ENABLED','TENANT','SYSTEM',UNIX_TIMESTAMP(),'SYSTEM',UNIX_TIMESTAMP());

INSERT INTO `SYSTEM_KEY` (`ID`, `SYSTEM_KEY`, `KEY_TYPE`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_BY`, `LAST_UPDATED_ON`) VALUES (UUID(),'EMAIL_NOTIFICATIONS_ENABLED','TENANT','SYSTEM',UNIX_TIMESTAMP(),'SYSTEM',UNIX_TIMESTAMP());

DELETE FROM TENANT_CONFIG WHERE SYSTEM_KEY_ID = ( SELECT ID FROM SYSTEM_KEY WHERE SYSTEM_KEY = "SOME");

DELETE FROM SYSTEM_KEY WHERE SYSTEM_KEY = "SOME" ;


/* set delimiter */
DELIMITER $$

/* remove procedure insert_authToken... */
DROP PROCEDURE IF EXISTS insert_authToken $$

/* create procedure insert_default_privileges*/ 
CREATE PROCEDURE insert_authToken ()
BEGIN
DECLARE authToken_length INT;
DECLARE x INT DEFAULT 0;

/* drop temp table  TEMP_TABLE_TENANT */ 
DROP TABLE IF EXISTS TEMP_TABLE_AUTHTOKEN;
/* create temp table  TEMP_TABLE_TENANT */
create temporary table if not exists TEMP_TABLE_AUTHTOKEN
select 
	TENANT_TEMP.AUTH_TOKEN as 'AUTHTOKEN',TENANT_TEMP.ID AS 'TENANT_ID'
from TENANT as TENANT_TEMP;

SELECT * FROM TEMP_TABLE_AUTHTOKEN;


SELECT COUNT(*) FROM TENANT INTO authToken_length;

SELECT authToken_length;

WHILE x < authToken_length DO
INSERT INTO AUTHTOKEN(`ID`, `TENANT_ID`, `AUTH_CODE`,`ACTIVE_FROM`,`ACTIVE_UNTIL`,`STATUS`,`COMMENT`,`CREATED_ON`,`CREATED_BY`,`LAST_UPDATED_BY`,
`LAST_UPDATED_ON`) VALUES(uuid(),(select TTU.ID  from TENANT AS TTU LIMIT x,1),(select TTU.AUTH_TOKEN  from TENANT AS TTU LIMIT x,1),1464331168000,1495780768000,'Active','Tenant Onboarded',1464331168000,'SYSTEM','SYSTEM',(select UNIX_TIMESTAMP()));
SET x = x+1;
END WHILE;

DROP TABLE TEMP_TABLE_AUTHTOKEN;

/*Successfully dropped temp tables*/

END $$

DELIMITER ;

CALL insert_authToken();

DROP PROCEDURE insert_authToken;


ALTER TABLE `TENANT`	DROP COLUMN `AUTH_TOKEN`;


commit;