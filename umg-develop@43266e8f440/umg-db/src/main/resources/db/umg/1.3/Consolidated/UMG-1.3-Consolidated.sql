-- USE 'tenant schema';

-- UMG-1552.sql
ALTER TABLE MODEL ADD COLUMN `ALLOW_NULL` TINYINT(4) NOT NULL DEFAULT 1
COMMENT 'Flag to know whether to allow nulls or not' AFTER DOC_NAME;

ALTER TABLE MODEL_AUDIT ADD COLUMN `ALLOW_NULL` TINYINT(4) NOT NULL AFTER DOC_NAME;

-- UMG-1677.sql
ALTER TABLE MIGRATION_LOG DROP FOREIGN KEY FK_VERSION;

-- UMG-1582.sql -- Tenant Schema.

CREATE TABLE IF NOT EXISTS `BATCH_TRANSACTION` (
  ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  BATCH_FILE_NAME VARCHAR(100) NOT NULL,
  STATUS VARCHAR(25) NOT NULL,
  START_TIME BIGINT(20) NULL, 
  END_TIME BIGINT(20) NULL, 
  TOTAL_RECORDS BIGINT NULL,
  SUCCESS_COUNT BIGINT NULL,
  FAIL_COUNT BIGINT NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BATCH_TXN_RUNTIME_TXN_MAPPING`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BATCH_TXN_RUNTIME_TXN_MAPPING` (
  ID CHAR(36) NOT NULL,
  BATCH_ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  TRANSACTION_ID CHAR(36) NOT NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  CONSTRAINT `FK_BATCH_RUNTIME_TXN_MAPPING_BATCH` FOREIGN KEY (`BATCH_ID`) REFERENCES `BATCH_TRANSACTION` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `FK_BATCH_RUNTIME_TXN_MAPPING_TRANSACTION` FOREIGN KEY (`TRANSACTION_ID`) REFERENCES `UMG_RUNTIME_TRANSACTION` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `TRANSPORT_PARAMETER_VALUES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TRANSPORT_PARAMETER_VALUES` (
  ID CHAR(36) NOT NULL,
  TENANT_ID VARCHAR(45) NOT NULL,
  TRANSPORT_NAME VARCHAR(45) NOT NULL,
  PARAMETER_NAME VARCHAR(45) NULL,
  PARAMETER_VALUE VARCHAR(45) NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

--- ADMIN SCHEMA

USE `UMG_ADMIN` ;

INSERT INTO SYSTEM_KEY(ID,SYSTEM_KEY,KEY_TYPE,CREATED_BY,CREATED_ON,LAST_UPDATED_BY,LAST_UPDATED_ON) VALUES ('15a69810-e665-12e3-b687-98654f4fc15c','BATCH_ENABLED','TENANT','SYSTEM',1401344421,'SYSTEM',1401344421);

-- -----------------------------------------------------
-- Table `TRANSPORT_TYPES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TRANSPORT_TYPES` (
  ID CHAR(36) NOT NULL,
  NAME VARCHAR(45) NOT NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `TRANSPORT_PARAMETERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TRANSPORT_PARAMETERS` (
  ID CHAR(36) NOT NULL,
  TRANSPORT_TYPE_ID VARCHAR(45) NOT NULL,
  PARAMETER_NAME VARCHAR(45) NOT NULL,
  DEFAULT_VALUE VARCHAR(45) NULL,
  CREATED_BY CHAR(36) NOT NULL COMMENT 'User created the record.',
  CREATED_ON BIGINT(20) NOT NULL COMMENT 'Record created time.',
  LAST_UPDATED_BY CHAR(36) NULL COMMENT 'User last updated the record.',
  LAST_UPDATED_ON BIGINT(20) NULL COMMENT 'Record last updated time.',
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_TRANSPORT_PARAMETERS_TRANSPORT_TYPE` FOREIGN KEY (`TRANSPORT_TYPE_ID`) REFERENCES `TRANSPORT_TYPES` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION  
  )
ENGINE = InnoDB;

COMMIT;

